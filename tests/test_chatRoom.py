# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestChatRoom():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_chatRoom(self):
    # Test name: ChatRoom
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://192.168.1.64:6070/")
    # 2 | setWindowSize | 945x1060 | 
    self.driver.set_window_size(945, 1060)
    # 3 | click | css=.btn:nth-child(1) > .flex | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(1) > .flex").click()
    # 4 | click | name=username | 
    self.driver.find_element(By.NAME, "username").click()
    # 5 | type | name=username | Eco
    self.driver.find_element(By.NAME, "username").send_keys("Eco")
    # 6 | type | name=password | 123
    self.driver.find_element(By.NAME, "password").send_keys("123")
    # 7 | click | css=.login100-form-btn | 
    self.driver.find_element(By.CSS_SELECTOR, ".login100-form-btn").click()
    # 8 | click | name=code | 
    self.driver.find_element(By.NAME, "code").click()
    # 9 | type | name=code | 549198
    self.driver.find_element(By.NAME, "code").send_keys("549198")
    # 10 | click | css=.login100-form-btn | 
    self.driver.find_element(By.CSS_SELECTOR, ".login100-form-btn").click()
    # 11 | click | css=.checkbox | 
    self.driver.find_element(By.CSS_SELECTOR, ".checkbox").click()
    # 12 | click | css=.chat-button > img | 
    self.vars["window_handles"] = self.driver.window_handles
    # 13 | storeWindowHandle | root | 
    self.driver.find_element(By.CSS_SELECTOR, ".chat-button > img").click()
    # 14 | open | /chat_home/158923 | 
    self.vars["win2445"] = self.wait_for_window(2000)
    # 15 | click | name=create | 
    self.vars["root"] = self.driver.current_window_handle
    # 16 | click | id=message | 
    self.driver.get("http://192.168.1.64:6070/chat_home/158923")
    # 17 | click | css=h2 | 
    self.driver.find_element(By.NAME, "create").click()
    # 18 | open | /profile/Eco | 
    self.driver.find_element(By.ID, "message").click()
    # 19 | click | css=.checkbox | 
    self.driver.find_element(By.CSS_SELECTOR, "h2").click()
    # 20 | click | css=.chat-button > img | 
    self.driver.get("http://192.168.1.64:6070/profile/Eco")
    # 21 | open | /chat_home/158923 | 
    self.driver.find_element(By.CSS_SELECTOR, ".checkbox").click()
    # 22 | click | name=code | 
    self.vars["window_handles"] = self.driver.window_handles
    # 23 | type | name=code | FEQY
    self.driver.find_element(By.CSS_SELECTOR, ".chat-button > img").click()
    # 24 | click | name=join | 
    self.vars["win437"] = self.wait_for_window(2000)
    self.driver.get("http://192.168.1.64:6070/chat_home/158923")
    self.driver.find_element(By.NAME, "code").click()
    self.driver.find_element(By.NAME, "code").send_keys("FEQY")
    self.driver.find_element(By.NAME, "join").click()
  
